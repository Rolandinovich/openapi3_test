info:
  description: 'Test description'
  title: 'Test title'
  version: 'first'
openapi: 3.0.0
tags:
  - name: auth
    description: Auth tools
  - name: user
    description: User info
servers:
  - url: http://127.0.0.1:8000
paths:
  /api/auth/registration/:
    post:
      tags:
        - auth
      summary: Create new user
      operationId: createUser
      requestBody:
        description: Create User
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        201:
          description: Key for authtorization
          content:
            application/json:
              schema:
                properties:
                  key:
                    type: string
  /api/auth/login/:
    post:
      tags:
        - auth
      summary: Get authtorization key
      operationId: createUser
      requestBody:
        description: Create User
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        200:
          description: Key for authtorization
          content:
            application/json:
              schema:
                properties:
                  key:
                    type: string
  /api/user/:
    get:
      tags:
        - user
      summary: Get user data
      operationId: getUserData
      responses:
        200:
          description: Get user data. Need authtorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataGet'
      security:
        - bearerAuth: []
    patch:
      tags:
        - user
      summary: Put user data
      operationId: gutUserData
      requestBody:
        description: Put user data. Need authtorization
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDataPatch'
          application/json:
            schema:
              $ref: '#/components/schemas/UserDataPatch'
      responses:
        200:
          description: User data. Need authtorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataGet'
      security:
        - bearerAuth: []
components:
  schemas:
    CreateUser:
      type: object
      properties:
        email:
          type: string
        password1:
          type: string
        password2:
          type: string
      xml:
        name: CreateUser
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      xml:
        name: Login
    UserDataGet:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        avatar:
          type: string
      xml:
        name: UserData
    UserDataPatch:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        avatar:
          type: string
          format: binary
      xml:
        name: UserData

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT